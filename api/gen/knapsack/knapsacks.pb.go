// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: knapsack/knapsacks.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // 道具id
	Type   int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`     // 类型 静态配置表中的ID
	Num    int32 `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`       //数量
	Expire int64 `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"` // 过期时间 秒
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Item) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Item) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type Knapsack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string           `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Items     map[int64]*Item  `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                          // 道具列表
	EventIds  map[string]int64 `protobuf:"bytes,3,rep,name=event_ids,json=eventIds,proto3" json:"event_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`    //event记录
	AtomicIds map[string]int64 `protobuf:"bytes,4,rep,name=atomic_ids,json=atomicIds,proto3" json:"atomic_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //实现冥等
	Features  map[int32]bool   `protobuf:"bytes,5,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`                   //功能特性
}

func (x *Knapsack) Reset() {
	*x = Knapsack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Knapsack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Knapsack) ProtoMessage() {}

func (x *Knapsack) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Knapsack.ProtoReflect.Descriptor instead.
func (*Knapsack) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{1}
}

func (x *Knapsack) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Knapsack) GetItems() map[int64]*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Knapsack) GetEventIds() map[string]int64 {
	if x != nil {
		return x.EventIds
	}
	return nil
}

func (x *Knapsack) GetAtomicIds() map[string]int64 {
	if x != nil {
		return x.AtomicIds
	}
	return nil
}

func (x *Knapsack) GetFeatures() map[int32]bool {
	if x != nil {
		return x.Features
	}
	return nil
}

type KnapsackModify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncrItems map[int64]*Item `protobuf:"bytes,1,rep,name=incr_items,json=incrItems,proto3" json:"incr_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DecrItems map[int64]*Item `protobuf:"bytes,2,rep,name=decr_items,json=decrItems,proto3" json:"decr_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Knapsack  *Knapsack       `protobuf:"bytes,3,opt,name=knapsack,proto3" json:"knapsack,omitempty"`
	Source    string          `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *KnapsackModify) Reset() {
	*x = KnapsackModify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnapsackModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnapsackModify) ProtoMessage() {}

func (x *KnapsackModify) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnapsackModify.ProtoReflect.Descriptor instead.
func (*KnapsackModify) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{2}
}

func (x *KnapsackModify) GetIncrItems() map[int64]*Item {
	if x != nil {
		return x.IncrItems
	}
	return nil
}

func (x *KnapsackModify) GetDecrItems() map[int64]*Item {
	if x != nil {
		return x.DecrItems
	}
	return nil
}

func (x *KnapsackModify) GetKnapsack() *Knapsack {
	if x != nil {
		return x.Knapsack
	}
	return nil
}

func (x *KnapsackModify) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type GetKnapsackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetKnapsackRequest) Reset() {
	*x = GetKnapsackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKnapsackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKnapsackRequest) ProtoMessage() {}

func (x *GetKnapsackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKnapsackRequest.ProtoReflect.Descriptor instead.
func (*GetKnapsackRequest) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{3}
}

func (x *GetKnapsackRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetKnapsackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Knapsack *Knapsack `protobuf:"bytes,1,opt,name=knapsack,proto3" json:"knapsack,omitempty"`
}

func (x *GetKnapsackResponse) Reset() {
	*x = GetKnapsackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKnapsackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKnapsackResponse) ProtoMessage() {}

func (x *GetKnapsackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKnapsackResponse.ProtoReflect.Descriptor instead.
func (*GetKnapsackResponse) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{4}
}

func (x *GetKnapsackResponse) GetKnapsack() *Knapsack {
	if x != nil {
		return x.Knapsack
	}
	return nil
}

type AddItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    map[int64]*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Features map[int32]bool  `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //功能特性
	Source   string          `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`                                                                                               //道具变更时的场景
}

func (x *AddItemRequest) Reset() {
	*x = AddItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemRequest) ProtoMessage() {}

func (x *AddItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemRequest.ProtoReflect.Descriptor instead.
func (*AddItemRequest) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{5}
}

func (x *AddItemRequest) GetItems() map[int64]*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AddItemRequest) GetFeatures() map[int32]bool {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *AddItemRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type AddItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddItemResponse) Reset() {
	*x = AddItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemResponse) ProtoMessage() {}

func (x *AddItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemResponse.ProtoReflect.Descriptor instead.
func (*AddItemResponse) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{6}
}

type RemoveItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items  map[int64]*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Source string          `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"` //道具变更时的场景
}

func (x *RemoveItemRequest) Reset() {
	*x = RemoveItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveItemRequest) ProtoMessage() {}

func (x *RemoveItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveItemRequest.ProtoReflect.Descriptor instead.
func (*RemoveItemRequest) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveItemRequest) GetItems() map[int64]*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RemoveItemRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type RemoveItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveItemResponse) Reset() {
	*x = RemoveItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveItemResponse) ProtoMessage() {}

func (x *RemoveItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveItemResponse.ProtoReflect.Descriptor instead.
func (*RemoveItemResponse) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{8}
}

type RemoveThenAddItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoveItems map[int64]*Item `protobuf:"bytes,1,rep,name=remove_items,json=removeItems,proto3" json:"remove_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AddItems    map[int64]*Item `protobuf:"bytes,2,rep,name=add_items,json=addItems,proto3" json:"add_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Source      string          `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"` //道具变更时的场景
}

func (x *RemoveThenAddItemRequest) Reset() {
	*x = RemoveThenAddItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveThenAddItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveThenAddItemRequest) ProtoMessage() {}

func (x *RemoveThenAddItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveThenAddItemRequest.ProtoReflect.Descriptor instead.
func (*RemoveThenAddItemRequest) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveThenAddItemRequest) GetRemoveItems() map[int64]*Item {
	if x != nil {
		return x.RemoveItems
	}
	return nil
}

func (x *RemoveThenAddItemRequest) GetAddItems() map[int64]*Item {
	if x != nil {
		return x.AddItems
	}
	return nil
}

func (x *RemoveThenAddItemRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type RemoveThenAddItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveThenAddItemResponse) Reset() {
	*x = RemoveThenAddItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveThenAddItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveThenAddItemResponse) ProtoMessage() {}

func (x *RemoveThenAddItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveThenAddItemResponse.ProtoReflect.Descriptor instead.
func (*RemoveThenAddItemResponse) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{10}
}

type AddItemPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Items    map[int64]*Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Source   string          `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`                                                                                               //道具变更时的场景
	Features map[int32]bool  `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //功能特性
}

func (x *AddItemPrivateRequest) Reset() {
	*x = AddItemPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemPrivateRequest) ProtoMessage() {}

func (x *AddItemPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemPrivateRequest.ProtoReflect.Descriptor instead.
func (*AddItemPrivateRequest) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{11}
}

func (x *AddItemPrivateRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AddItemPrivateRequest) GetItems() map[int64]*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AddItemPrivateRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *AddItemPrivateRequest) GetFeatures() map[int32]bool {
	if x != nil {
		return x.Features
	}
	return nil
}

type AddItemPrivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddItemPrivateResponse) Reset() {
	*x = AddItemPrivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemPrivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemPrivateResponse) ProtoMessage() {}

func (x *AddItemPrivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemPrivateResponse.ProtoReflect.Descriptor instead.
func (*AddItemPrivateResponse) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{12}
}

type RemoveItemPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Items  map[int64]*Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Source string          `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"` //道具变更时的场景
}

func (x *RemoveItemPrivateRequest) Reset() {
	*x = RemoveItemPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveItemPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveItemPrivateRequest) ProtoMessage() {}

func (x *RemoveItemPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveItemPrivateRequest.ProtoReflect.Descriptor instead.
func (*RemoveItemPrivateRequest) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveItemPrivateRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RemoveItemPrivateRequest) GetItems() map[int64]*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RemoveItemPrivateRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type RemoveItemPrivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveItemPrivateResponse) Reset() {
	*x = RemoveItemPrivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveItemPrivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveItemPrivateResponse) ProtoMessage() {}

func (x *RemoveItemPrivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveItemPrivateResponse.ProtoReflect.Descriptor instead.
func (*RemoveItemPrivateResponse) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{14}
}

type GetItemByIdPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ItemId int64  `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *GetItemByIdPrivateRequest) Reset() {
	*x = GetItemByIdPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemByIdPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemByIdPrivateRequest) ProtoMessage() {}

func (x *GetItemByIdPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemByIdPrivateRequest.ProtoReflect.Descriptor instead.
func (*GetItemByIdPrivateRequest) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{15}
}

func (x *GetItemByIdPrivateRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetItemByIdPrivateRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type GetItemByIdPrivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetItemByIdPrivateResponse) Reset() {
	*x = GetItemByIdPrivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_knapsack_knapsacks_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemByIdPrivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemByIdPrivateResponse) ProtoMessage() {}

func (x *GetItemByIdPrivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_knapsack_knapsacks_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemByIdPrivateResponse.ProtoReflect.Descriptor instead.
func (*GetItemByIdPrivateResponse) Descriptor() ([]byte, []int) {
	return file_knapsack_knapsacks_proto_rawDescGZIP(), []int{16}
}

func (x *GetItemByIdPrivateResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_knapsack_knapsacks_proto protoreflect.FileDescriptor

var file_knapsack_knapsacks_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2f, 0x6b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6b, 0x6e, 0x61, 0x70,
	0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x22, 0x54, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0xa1, 0x04,
	0x0a, 0x08, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61,
	0x63, 0x6b, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61,
	0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6e, 0x61,
	0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63,
	0x6b, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x6e, 0x61, 0x70,
	0x73, 0x61, 0x63, 0x6b, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x4b, 0x0a, 0x0a,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63,
	0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x93, 0x03, 0x0a, 0x0e, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x12, 0x49, 0x0a, 0x0a, 0x69, 0x6e, 0x63, 0x72, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x63, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x49, 0x0a, 0x0a, 0x64, 0x65, 0x63, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x62, 0x2e, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x2e, 0x44, 0x65, 0x63, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x64, 0x65, 0x63, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x6b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b,
	0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x52, 0x08, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x4f, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6e, 0x61, 0x70,
	0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x48, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x52,
	0x08, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x22, 0xb7, 0x02, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x45, 0x0a, 0x08, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6b,
	0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x4b, 0x0a, 0x0a, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x4b, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x82, 0x03, 0x0a, 0x18, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x68, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x54, 0x68, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x50, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x68, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x51, 0x0a, 0x10, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4e, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1b, 0x0a,
	0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x68, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xde, 0x02, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x1a, 0x4b, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b,
	0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x18, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x1a, 0x4b, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x42, 0x79, 0x49, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x32, 0xe4, 0x02, 0x0a, 0x0f,
	0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x12, 0x1f,
	0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b,
	0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6b, 0x6e,
	0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x2e, 0x6b, 0x6e, 0x61, 0x70,
	0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6b, 0x6e, 0x61, 0x70,
	0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x68, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x25, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x68, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x68, 0x65,
	0x6e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0x83, 0x03, 0x0a, 0x16, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6b,
	0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x25, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x26, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x6e, 0x61, 0x70,
	0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42,
	0x79, 0x49, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x61, 0x70, 0x73,
	0x61, 0x63, 0x6b, 0x12, 0x1f, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6e, 0x61, 0x70, 0x73, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x6b, 0x6e, 0x61, 0x70,
	0x73, 0x61, 0x63, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_knapsack_knapsacks_proto_rawDescOnce sync.Once
	file_knapsack_knapsacks_proto_rawDescData = file_knapsack_knapsacks_proto_rawDesc
)

func file_knapsack_knapsacks_proto_rawDescGZIP() []byte {
	file_knapsack_knapsacks_proto_rawDescOnce.Do(func() {
		file_knapsack_knapsacks_proto_rawDescData = protoimpl.X.CompressGZIP(file_knapsack_knapsacks_proto_rawDescData)
	})
	return file_knapsack_knapsacks_proto_rawDescData
}

var file_knapsack_knapsacks_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_knapsack_knapsacks_proto_goTypes = []any{
	(*Item)(nil),                       // 0: knapsack.pb.Item
	(*Knapsack)(nil),                   // 1: knapsack.pb.Knapsack
	(*KnapsackModify)(nil),             // 2: knapsack.pb.KnapsackModify
	(*GetKnapsackRequest)(nil),         // 3: knapsack.pb.GetKnapsackRequest
	(*GetKnapsackResponse)(nil),        // 4: knapsack.pb.GetKnapsackResponse
	(*AddItemRequest)(nil),             // 5: knapsack.pb.AddItemRequest
	(*AddItemResponse)(nil),            // 6: knapsack.pb.AddItemResponse
	(*RemoveItemRequest)(nil),          // 7: knapsack.pb.RemoveItemRequest
	(*RemoveItemResponse)(nil),         // 8: knapsack.pb.RemoveItemResponse
	(*RemoveThenAddItemRequest)(nil),   // 9: knapsack.pb.RemoveThenAddItemRequest
	(*RemoveThenAddItemResponse)(nil),  // 10: knapsack.pb.RemoveThenAddItemResponse
	(*AddItemPrivateRequest)(nil),      // 11: knapsack.pb.AddItemPrivateRequest
	(*AddItemPrivateResponse)(nil),     // 12: knapsack.pb.AddItemPrivateResponse
	(*RemoveItemPrivateRequest)(nil),   // 13: knapsack.pb.RemoveItemPrivateRequest
	(*RemoveItemPrivateResponse)(nil),  // 14: knapsack.pb.RemoveItemPrivateResponse
	(*GetItemByIdPrivateRequest)(nil),  // 15: knapsack.pb.GetItemByIdPrivateRequest
	(*GetItemByIdPrivateResponse)(nil), // 16: knapsack.pb.GetItemByIdPrivateResponse
	nil,                                // 17: knapsack.pb.Knapsack.ItemsEntry
	nil,                                // 18: knapsack.pb.Knapsack.EventIdsEntry
	nil,                                // 19: knapsack.pb.Knapsack.AtomicIdsEntry
	nil,                                // 20: knapsack.pb.Knapsack.FeaturesEntry
	nil,                                // 21: knapsack.pb.KnapsackModify.IncrItemsEntry
	nil,                                // 22: knapsack.pb.KnapsackModify.DecrItemsEntry
	nil,                                // 23: knapsack.pb.AddItemRequest.ItemsEntry
	nil,                                // 24: knapsack.pb.AddItemRequest.FeaturesEntry
	nil,                                // 25: knapsack.pb.RemoveItemRequest.ItemsEntry
	nil,                                // 26: knapsack.pb.RemoveThenAddItemRequest.RemoveItemsEntry
	nil,                                // 27: knapsack.pb.RemoveThenAddItemRequest.AddItemsEntry
	nil,                                // 28: knapsack.pb.AddItemPrivateRequest.ItemsEntry
	nil,                                // 29: knapsack.pb.AddItemPrivateRequest.FeaturesEntry
	nil,                                // 30: knapsack.pb.RemoveItemPrivateRequest.ItemsEntry
}
var file_knapsack_knapsacks_proto_depIdxs = []int32{
	17, // 0: knapsack.pb.Knapsack.items:type_name -> knapsack.pb.Knapsack.ItemsEntry
	18, // 1: knapsack.pb.Knapsack.event_ids:type_name -> knapsack.pb.Knapsack.EventIdsEntry
	19, // 2: knapsack.pb.Knapsack.atomic_ids:type_name -> knapsack.pb.Knapsack.AtomicIdsEntry
	20, // 3: knapsack.pb.Knapsack.features:type_name -> knapsack.pb.Knapsack.FeaturesEntry
	21, // 4: knapsack.pb.KnapsackModify.incr_items:type_name -> knapsack.pb.KnapsackModify.IncrItemsEntry
	22, // 5: knapsack.pb.KnapsackModify.decr_items:type_name -> knapsack.pb.KnapsackModify.DecrItemsEntry
	1,  // 6: knapsack.pb.KnapsackModify.knapsack:type_name -> knapsack.pb.Knapsack
	1,  // 7: knapsack.pb.GetKnapsackResponse.knapsack:type_name -> knapsack.pb.Knapsack
	23, // 8: knapsack.pb.AddItemRequest.items:type_name -> knapsack.pb.AddItemRequest.ItemsEntry
	24, // 9: knapsack.pb.AddItemRequest.features:type_name -> knapsack.pb.AddItemRequest.FeaturesEntry
	25, // 10: knapsack.pb.RemoveItemRequest.items:type_name -> knapsack.pb.RemoveItemRequest.ItemsEntry
	26, // 11: knapsack.pb.RemoveThenAddItemRequest.remove_items:type_name -> knapsack.pb.RemoveThenAddItemRequest.RemoveItemsEntry
	27, // 12: knapsack.pb.RemoveThenAddItemRequest.add_items:type_name -> knapsack.pb.RemoveThenAddItemRequest.AddItemsEntry
	28, // 13: knapsack.pb.AddItemPrivateRequest.items:type_name -> knapsack.pb.AddItemPrivateRequest.ItemsEntry
	29, // 14: knapsack.pb.AddItemPrivateRequest.features:type_name -> knapsack.pb.AddItemPrivateRequest.FeaturesEntry
	30, // 15: knapsack.pb.RemoveItemPrivateRequest.items:type_name -> knapsack.pb.RemoveItemPrivateRequest.ItemsEntry
	0,  // 16: knapsack.pb.GetItemByIdPrivateResponse.item:type_name -> knapsack.pb.Item
	0,  // 17: knapsack.pb.Knapsack.ItemsEntry.value:type_name -> knapsack.pb.Item
	0,  // 18: knapsack.pb.KnapsackModify.IncrItemsEntry.value:type_name -> knapsack.pb.Item
	0,  // 19: knapsack.pb.KnapsackModify.DecrItemsEntry.value:type_name -> knapsack.pb.Item
	0,  // 20: knapsack.pb.AddItemRequest.ItemsEntry.value:type_name -> knapsack.pb.Item
	0,  // 21: knapsack.pb.RemoveItemRequest.ItemsEntry.value:type_name -> knapsack.pb.Item
	0,  // 22: knapsack.pb.RemoveThenAddItemRequest.RemoveItemsEntry.value:type_name -> knapsack.pb.Item
	0,  // 23: knapsack.pb.RemoveThenAddItemRequest.AddItemsEntry.value:type_name -> knapsack.pb.Item
	0,  // 24: knapsack.pb.AddItemPrivateRequest.ItemsEntry.value:type_name -> knapsack.pb.Item
	0,  // 25: knapsack.pb.RemoveItemPrivateRequest.ItemsEntry.value:type_name -> knapsack.pb.Item
	3,  // 26: knapsack.pb.KnapsackService.GetKnapsack:input_type -> knapsack.pb.GetKnapsackRequest
	5,  // 27: knapsack.pb.KnapsackService.AddItem:input_type -> knapsack.pb.AddItemRequest
	7,  // 28: knapsack.pb.KnapsackService.RemoveItem:input_type -> knapsack.pb.RemoveItemRequest
	9,  // 29: knapsack.pb.KnapsackService.RemoveThenAddItem:input_type -> knapsack.pb.RemoveThenAddItemRequest
	11, // 30: knapsack.pb.KnapsackPrivateService.AddItem:input_type -> knapsack.pb.AddItemPrivateRequest
	13, // 31: knapsack.pb.KnapsackPrivateService.RemoveItem:input_type -> knapsack.pb.RemoveItemPrivateRequest
	15, // 32: knapsack.pb.KnapsackPrivateService.GetItemById:input_type -> knapsack.pb.GetItemByIdPrivateRequest
	3,  // 33: knapsack.pb.KnapsackPrivateService.GetKnapsack:input_type -> knapsack.pb.GetKnapsackRequest
	4,  // 34: knapsack.pb.KnapsackService.GetKnapsack:output_type -> knapsack.pb.GetKnapsackResponse
	6,  // 35: knapsack.pb.KnapsackService.AddItem:output_type -> knapsack.pb.AddItemResponse
	8,  // 36: knapsack.pb.KnapsackService.RemoveItem:output_type -> knapsack.pb.RemoveItemResponse
	10, // 37: knapsack.pb.KnapsackService.RemoveThenAddItem:output_type -> knapsack.pb.RemoveThenAddItemResponse
	12, // 38: knapsack.pb.KnapsackPrivateService.AddItem:output_type -> knapsack.pb.AddItemPrivateResponse
	14, // 39: knapsack.pb.KnapsackPrivateService.RemoveItem:output_type -> knapsack.pb.RemoveItemPrivateResponse
	16, // 40: knapsack.pb.KnapsackPrivateService.GetItemById:output_type -> knapsack.pb.GetItemByIdPrivateResponse
	4,  // 41: knapsack.pb.KnapsackPrivateService.GetKnapsack:output_type -> knapsack.pb.GetKnapsackResponse
	34, // [34:42] is the sub-list for method output_type
	26, // [26:34] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_knapsack_knapsacks_proto_init() }
func file_knapsack_knapsacks_proto_init() {
	if File_knapsack_knapsacks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_knapsack_knapsacks_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Knapsack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*KnapsackModify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetKnapsackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetKnapsackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AddItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AddItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveThenAddItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveThenAddItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AddItemPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AddItemPrivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveItemPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveItemPrivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetItemByIdPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_knapsack_knapsacks_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetItemByIdPrivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_knapsack_knapsacks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_knapsack_knapsacks_proto_goTypes,
		DependencyIndexes: file_knapsack_knapsacks_proto_depIdxs,
		MessageInfos:      file_knapsack_knapsacks_proto_msgTypes,
	}.Build()
	File_knapsack_knapsacks_proto = out.File
	file_knapsack_knapsacks_proto_rawDesc = nil
	file_knapsack_knapsacks_proto_goTypes = nil
	file_knapsack_knapsacks_proto_depIdxs = nil
}
