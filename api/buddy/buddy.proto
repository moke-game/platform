syntax = "proto3";

// Buddy service is used for buddy management
// 好友服务 用于好友管理
package buddy.v1;
option go_package = "buddy/api;buddy";

// Import path is relative to root directory specified in .spacerouter.yml
import "buddy/buddy_common.proto";
import "google/api/annotations.proto";


// BuddyService is a service for managing buddies
// 好友服务 用于好友管理
service BuddyService {
  // AddBuddy adds a buddy to the current user's queue.
  // 添加好友请求
  rpc AddBuddy (AddBuddyRequest) returns (AddBuddyResponse){
    option (google.api.http) = {
      post: "/v1/buddy/add"
      body: "*"
    };
  }

  // RemoveBuddy removes a buddy from the current user's queue.
  // 删除好友请求
  rpc RemoveBuddy (RemoveBuddyRequest) returns (Nothing){
    option (google.api.http) = {
      post: "/v1/buddy/remove"
      body: "*"
    };
  };

  // GetBuddies returns the current user's buddies.
  // 获取好友列表
  rpc GetBuddies (GetBuddyRequest) returns (GetBuddyResponse){
    option (google.api.http) = {
      post: "/v1/buddy/get"
      body: "*"
    };
  };

  // ReplyAddBuddy is called to accept or reject a buddy add request.
  // 回复好友请求
  rpc ReplyAddBuddy (ReplyAddBuddyRequest) returns (ReplyAddBuddyResponse){
    option (google.api.http) = {
      post: "/v1/buddy/reply"
      body: "*"
    };
  };

  // WatchBuddies returns a stream on which changes to the current user's
  //buddies and blocked list  and recent met will be sent.
  // 监听好友列表变化
  rpc WatchBuddies (Nothing) returns (stream BuddyChanges){
    option (google.api.http) = {
      post: "/v1/buddy/watch"
      body: "*"
    };
  };

  // Remark remark buddy nickname
  // 备注好友昵称
  rpc Remark (RemarkRequest) returns (Nothing){
    option (google.api.http) = {
      post: "/v1/buddy/remark"
      body: "*"
    };
  };

  //Refuse buddy request
  // 拒绝好友请求
  rpc RefuseBuddy(RefuseBuddyRequest) returns(Nothing){
    option (google.api.http) = {
      post: "/v1/buddy/refuse"
      body: "*"
    };
  };

  //---------------------------------------------Blocked List Start------------------------------------
  // GetBlockedUsers returns the current user's blocked users.
  // 获取黑名单列表
  rpc GetBlockedProfiles (Nothing) returns (ProfileIds){
    option (google.api.http) = {
      post: "/v1/buddy/blocked/get"
      body: "*"
    };
  };

  //AddBlockedUsers is called to add users to self's buddy list or blocked list
  // 添加黑名单
  rpc AddBlockedProfiles (ProfileIds) returns (Nothing){
    option (google.api.http) = {
      post: "/v1/buddy/blocked/add"
      body: "*"
    };
  };

  //RemoveBlockedUsers is called to remove users to self's buddy list or blocked list
  // 移除黑名单
  rpc RemoveBlockedProfiles (ProfileIds) returns (Nothing){
    option (google.api.http) = {
      post: "/v1/buddy/blocked/remove"
      body: "*"
    };
  };

  //  IsBlocked is called to check if a user is blocked
  // 检查是否在黑名单
  rpc IsBlocked(IsBlockedRequest) returns(IsBlockedResponse){
    option (google.api.http) = {
      post: "/v1/buddy/is_blocked"
      body: "*"
    };
  };
  //---------------------------------------------Blocked List End---------------------------------------
  // DeleteAccount is called to delete a self buddy account data
  // 删除好友关系数据
  rpc DeleteAccount(DeleteAccountRequest) returns(DeleteAccountResponse){
    option (google.api.http) = {
      post: "/v1/buddy/delete"
      body: "*"
    };
  };
}


// AddBuddyRequest is used to request a user be added as a buddy.
message AddBuddyRequest {
  // The user ID of the user to be added as a buddy.
  // 目标玩家ID
  repeated string uid = 1;
  // The request information to be sent to the user.
  // 请求信息
  string req_info = 2;
}
message AddBuddyResponse{
}

//RemoveBuddyRequest is used to request a user be removed as a buddy.
message RemoveBuddyRequest {
  string uid = 1;
}

// RemarkRequest is used to send a remark to a buddy.
message RemarkRequest {
  string uid = 1;
  string remark = 2;
}

message GetBuddyRequest{
  string uid = 1;
}

message GetBuddyResponse{
  Buddies buddies = 1;
}

message RefuseBuddyRequest{
  repeated string uid = 1;
}


// ReplyAddBuddyRequest is used to respond to (accept or reject) a buddy add request.
message ReplyAddBuddyRequest {
  repeated string uid = 1;

  // A value of 0 means reject while a value of 1 means accept
  bool response = 2;
}

// ReplyAddBuddyResponse is used to respond to (accept or reject) a buddy add request.
message ReplyAddBuddyResponse {
  repeated string failed = 1;
}

message BuddyChanges{
  repeated Buddy added = 1;
  repeated Inviter inviter_added = 2;
  repeated string removed = 3;
  repeated Buddy reward_update = 4;
}

message IsBlockedRequest{
  string uid = 2;
}

message IsBlockedResponse{
  bool is_blocked = 1;
}

message DeleteAccountRequest{
  string uid = 1;
}

message DeleteAccountResponse{

}