syntax = "proto3";

// Analytics service for sending analytics events,
// support multi delivery type: local,thinkingdata,clickhouse,mixpanel etc.
// 分析服务用于发送分析事件
// 支持多种投递方式: local,thinkingdata,clickhouse,mixpanel等
package analytics.v1;
option go_package = "analytics/api;v1";
import "google/api/annotations.proto";

service AnalyticsService {
  // Analytics send a batch of analytics events to the analytics service，return Nothing
  // Recommend to use async/multi events at once
  // 发送一批分析事件到分析服务，返回Nothing
  // 建议使用异步+批量事件一次发送
  rpc Analytics(AnalyticsEvents) returns (Nothing) {
    option (google.api.http) = {
      post: "/v1/analytics"
      body: "*"
    };
  }
}

message AnalyticsEvents {
  repeated Event events = 1;
}

enum DeliveryType {
  // Deliver to the local file
  Local = 0;

  // Deliver to ThinkingData
  // https://www.thinkingdata.cn/
  ThinkingData = 1;

  //Deliver to clickhouse
  ClickHouse = 2;
  // Deliver to Mixpanel
  // https://mixpanel.com/
  Mixpanel = 3;
}

// AnalyticsEvent is a single analytics event to capture.
message Event {
  // The unique name for this event.  Be pragmatic with event names and store additional properties in the
  // properties field.
  //NOTE: only contain: number,letter(ignoring case) and underscore"_" ,no spaces in the configuration
  string event = 1;

  // Generic JSON property key/value pairs. {"id":"fun","age":10}
  bytes properties = 2;

  // Where to deliver this event to, defaults to Local.
  DeliveryType deliver_to = 3;

  // user_id is the unique identifier for the user.
  // if use thinkingdata ,distinct_id /user_id is required
  string user_id = 4;
  // distinct_id is the unique identifier for the user/visitor.
  // if use thinkingdata ,distinct_id /user_id is required
  string distinct_id = 5;
}

// Nothing is an empty message.  Used when there's nothing to send.
message Nothing {}
